name: Catalyst build

on:
    workflow_dispatch:
        inputs:
            key:
                description: 'Catalyst version key'
                required: true
                type: string
                default: 'your_key_value'
            version:
                description: 'Catalyst version'
                required: true
                type: string
                default: 'your_version_value'
            release_description:
                description: 'Release description'
                required: true
                type: string
                default: 'your_release_description_value'
            prerelease:
                description: 'Is it a prerelease'
                required: true
                type: boolean
                default: false

permissions:
  contents: write

jobs:
    linux-build:
        name: Build-linux
        runs-on: ubuntu-latest           

        env:
            CATALYST_KEY: ${{ inputs.key }}
            CATALYST_VERSION: ${{ inputs.version }}
        steps:

        - uses: actions/checkout@v4
        - run: |
            cargo build -r
            mkdir build-linux
            cp target/release/{cly,clyhandler} build-linux/
            cd build-linux
            zip -r ../catalyst-linux-amd64.zip .

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: linux-build
            path: ./*.zip

    windows-build:
        name: Build-windows
        runs-on: windows-latest
        
        env:
            CATALYST_KEY: ${{ inputs.key }}
            CATALYST_VERSION: ${{ inputs.version }}
        steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Build
          run: |
            cargo build -r
            mkdir build-win
            cp target/release/cly.exe build-win/
            cp target/release/clyhandler.exe build-win/
            cd build-win
            Compress-Archive -Path *.exe -DestinationPath ../catalyst-windows-64-bit.zip
            Invoke-WebRequest -Method POST -Headers @{"Content-Type" = "application/json"; "User-Agent" = "Cly-release-updater"} -Uri 'https://cly-rs.vercel.app/api/version?key=${{ env.CATALYST_KEY }}&version=${{ env.CATALYST_VERSION}}'

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: windows-build
            path: ./*.zip
            
    
    create-release:
        name: Create release
        runs-on: ubuntu-latest
        needs: [linux-build, windows-build]
        steps:
        - uses: actions/checkout@v4
        - run: mkdir release
        - uses: actions/download-artifact@v4
          with:
            name: windows-build
            path: release
        - uses: actions/download-artifact@v4
          with:
            name: linux-build
            path: release
        
        - uses: softprops/action-gh-release@v2
          with:
            files: release/*
            name: v${{ inputs.version }}
            tag_name: ${{ inputs.version }}
            body: ${{ inputs.release_description }}
            prerelease: ${{ inputs.prerelease }}

