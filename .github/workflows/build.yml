on:
    workflow_dispatch:
        inputs:
            key:
                description: 'Catalyst version key'
                required: true
                type: string
            version:
                description: 'Catalyst version'
                required: true
                type: string
            release_description:
                description: 'Release description'
                required: true
                type: string

jobs:
    linux-build:
        name: Build-linux
        runs-on: ubuntu-latest           

        env:
            CATALYST_KEY: ${{ inputs.key }}
            CATALYST_VERSION: ${{ inputs.version }}
        steps:
        - uses: actions/checkout@v4
        - run: |
            cargo build -r
            mkdir build-linux
            cp target/release/{cly,clyhandler} build-linux/
            cd build-linux
            zip -r ../catalyst-linux-amd64.zip .

        - uses: actions/upload-artifact@v4
          name: Upload linux build
          with:
            name: build-linux
            path: *.zip

    windows-build:
        name: Build-windows
        runs-on: windows-latest
        env:
            CATALYST_KEY: ${{ inputs.key }}
            CATALYST_VERSION: ${{ inputs.version }}
        steps:
        - uses: actions/checkout@v4
        - run: |
            cargo build -r
            mkdir build-win
            cp target/release/cly.exe build-win/
            cp target/release/clyhandler.exe build-win/
            cd build-win
            Compress-Archive -Path *.exe -DestinationPath ../catalyst-windows-64-bit.zip
            Invoke-WebRequest -Method POST -Headers @{"Content-Type" = "application/json"; "User-Agent" = "CRU/${{ env.CATALYST_VERSION}}"} -Body '{"key": "${{ env.CATALYST_KEY }}", "version": "${{ env.CATALYST_VERSION }}"}' -Uri http://cly-rs.vercel.app/api/version
        - uses: actions/upload-artifact@v4
          name: Upload windows build
          with:
            name: build-win
            path: *.zip
    
    create-release:
        name: Create release
        runs-on: ubuntu-latest
        needs: [linux-build, windows-build]
        steps:
        - uses: actions/download-artifact@v4
          name: Download linux build
          with:
            name: linux-build
            path: build-linux
            glob: "*.zip"

        - uses: actions/download-artifact@v4
          name: Download windows build
          with:
            name: windows-build
            path: build-win
            glob: "*.zip"
        - run: |
            mkdir release
            cp build-linux/*.zip release
            cp build-win/*.zip release
        - uses: actions/upload-artifact@v4
          name: Upload release
          with:
            name: ${{ inputs.version}}
            description: ${{ inputs.release_description }}
            path: release/*.zip
